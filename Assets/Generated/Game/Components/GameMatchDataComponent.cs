//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity matchDataEntity { get { return GetGroup(GameMatcher.MatchData).GetSingleEntity(); } }
    public MatchData matchData { get { return matchDataEntity.matchData; } }
    public bool hasMatchData { get { return matchDataEntity != null; } }

    public GameEntity SetMatchData(int newMatchId) {
        if (hasMatchData) {
            throw new Entitas.EntitasException("Could not set MatchData!\n" + this + " already has an entity with MatchData!",
                "You should check if the context already has a matchDataEntity before setting it or use context.ReplaceMatchData().");
        }
        var entity = CreateEntity();
        entity.AddMatchData(newMatchId);
        return entity;
    }

    public void ReplaceMatchData(int newMatchId) {
        var entity = matchDataEntity;
        if (entity == null) {
            entity = SetMatchData(newMatchId);
        } else {
            entity.ReplaceMatchData(newMatchId);
        }
    }

    public void RemoveMatchData() {
        matchDataEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MatchData matchData { get { return (MatchData)GetComponent(GameComponentsLookup.MatchData); } }
    public bool hasMatchData { get { return HasComponent(GameComponentsLookup.MatchData); } }

    public void AddMatchData(int newMatchId) {
        var index = GameComponentsLookup.MatchData;
        var component = (MatchData)CreateComponent(index, typeof(MatchData));
        component.MatchId = newMatchId;
        AddComponent(index, component);
    }

    public void ReplaceMatchData(int newMatchId) {
        var index = GameComponentsLookup.MatchData;
        var component = (MatchData)CreateComponent(index, typeof(MatchData));
        component.MatchId = newMatchId;
        ReplaceComponent(index, component);
    }

    public void RemoveMatchData() {
        RemoveComponent(GameComponentsLookup.MatchData);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMatchData;

    public static Entitas.IMatcher<GameEntity> MatchData {
        get {
            if (_matcherMatchData == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MatchData);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMatchData = matcher;
            }

            return _matcherMatchData;
        }
    }
}
