//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MaxHealthPointsComponent maxHealthPoints { get { return (MaxHealthPointsComponent)GetComponent(GameComponentsLookup.MaxHealthPoints); } }
    public bool hasMaxHealthPoints { get { return HasComponent(GameComponentsLookup.MaxHealthPoints); } }

    public void AddMaxHealthPoints(float newValue) {
        var index = GameComponentsLookup.MaxHealthPoints;
        var component = (MaxHealthPointsComponent)CreateComponent(index, typeof(MaxHealthPointsComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMaxHealthPoints(float newValue) {
        var index = GameComponentsLookup.MaxHealthPoints;
        var component = (MaxHealthPointsComponent)CreateComponent(index, typeof(MaxHealthPointsComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMaxHealthPoints() {
        RemoveComponent(GameComponentsLookup.MaxHealthPoints);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMaxHealthPoints;

    public static Entitas.IMatcher<GameEntity> MaxHealthPoints {
        get {
            if (_matcherMaxHealthPoints == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MaxHealthPoints);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMaxHealthPoints = matcher;
            }

            return _matcherMaxHealthPoints;
        }
    }
}
