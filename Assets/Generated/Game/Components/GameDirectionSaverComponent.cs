//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public DirectionSaverComponent directionSaver { get { return (DirectionSaverComponent)GetComponent(GameComponentsLookup.DirectionSaver); } }
    public bool hasDirectionSaver { get { return HasComponent(GameComponentsLookup.DirectionSaver); } }

    public void AddDirectionSaver(float newAngle, float newTime) {
        var index = GameComponentsLookup.DirectionSaver;
        var component = (DirectionSaverComponent)CreateComponent(index, typeof(DirectionSaverComponent));
        component.angle = newAngle;
        component.time = newTime;
        AddComponent(index, component);
    }

    public void ReplaceDirectionSaver(float newAngle, float newTime) {
        var index = GameComponentsLookup.DirectionSaver;
        var component = (DirectionSaverComponent)CreateComponent(index, typeof(DirectionSaverComponent));
        component.angle = newAngle;
        component.time = newTime;
        ReplaceComponent(index, component);
    }

    public void RemoveDirectionSaver() {
        RemoveComponent(GameComponentsLookup.DirectionSaver);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDirectionSaver;

    public static Entitas.IMatcher<GameEntity> DirectionSaver {
        get {
            if (_matcherDirectionSaver == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DirectionSaver);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDirectionSaver = matcher;
            }

            return _matcherDirectionSaver;
        }
    }
}
