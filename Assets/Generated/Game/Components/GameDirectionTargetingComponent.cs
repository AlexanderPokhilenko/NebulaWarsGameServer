//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public DirectionTargetingComponent directionTargeting { get { return (DirectionTargetingComponent)GetComponent(GameComponentsLookup.DirectionTargeting); } }
    public bool hasDirectionTargeting { get { return HasComponent(GameComponentsLookup.DirectionTargeting); } }

    public void AddDirectionTargeting(float newAngle) {
        var index = GameComponentsLookup.DirectionTargeting;
        var component = (DirectionTargetingComponent)CreateComponent(index, typeof(DirectionTargetingComponent));
        component.angle = newAngle;
        AddComponent(index, component);
    }

    public void ReplaceDirectionTargeting(float newAngle) {
        var index = GameComponentsLookup.DirectionTargeting;
        var component = (DirectionTargetingComponent)CreateComponent(index, typeof(DirectionTargetingComponent));
        component.angle = newAngle;
        ReplaceComponent(index, component);
    }

    public void RemoveDirectionTargeting() {
        RemoveComponent(GameComponentsLookup.DirectionTargeting);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDirectionTargeting;

    public static Entitas.IMatcher<GameEntity> DirectionTargeting {
        get {
            if (_matcherDirectionTargeting == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DirectionTargeting);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDirectionTargeting = matcher;
            }

            return _matcherDirectionTargeting;
        }
    }
}
